{"version":3,"sources":["../webpack:/@fundamend/action-github-tag/webpack/bootstrap","../webpack:/@fundamend/action-github-tag/src/index.js"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","threw","__webpack_modules__","call","async","run","token","_actions_core__WEBPACK_IMPORTED_MODULE_0__","getInput","required","tag","sha","_actions_github__WEBPACK_IMPORTED_MODULE_1__","context","client","getOctokit","debug","git","createRef","owner","repo","ref","error","setFailed","message"],"mappings":";;;;;;;;;;;;m3jKACA,IAAAA,EAAA,GAGA,SAAAC,oBAAAC,GAEA,IAAAC,EAAAH,EAAAE,GACA,GAAAC,IAAAC,UAAA,CACA,OAAAD,EAAAE,QAGA,IAAAC,EAAAN,EAAAE,GAAA,CAGAG,QAAA,IAIA,IAAAE,EAAA,KACA,IACAC,EAAAN,GAAAO,KAAAH,EAAAD,QAAAC,EAAAA,EAAAD,QAAAJ,qBACAM,EAAA,MACA,QACA,GAAAA,SAAAP,EAAAE,GAIA,OAAAI,EAAAD,40BCxBAK,eAAAC,MACA,IACA,MAAAC,EAAAC,EAAAC,SAAA,eAAA,CAAAC,SAAA,OACA,MAAAC,EAAAH,EAAAC,SAAA,MAAA,CAAAC,SAAA,OACA,MAAAE,EAAAC,EAAAC,QAAAF,IAEA,MAAAG,EAAA,IAAAF,EAAAG,WAAAT,GAEAC,EAAAS,MAAA,YAAAL,cAAAD,WACAI,EAAAG,IAAAC,UAAA,CACAC,MAAAP,EAAAC,QAAAO,KAAAD,MACAC,KAAAR,EAAAC,QAAAO,KAAAA,KACAC,IAAA,aAAAX,IACAC,IAAAA,IAEA,MAAAW,GACAf,EAAAe,MAAAA,GACAf,EAAAgB,UAAAD,EAAAE,UAIAnB","file":"index.js","sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as core from '@actions/core';\nimport * as github from '@actions/github';\n\nasync function run() {\n\ttry {\n\t\tconst token = core.getInput('github-token', { required: true });\n\t\tconst tag = core.getInput('tag', { required: true });\n\t\tconst sha = github.context.sha;\n\n\t\tconst client = new github.getOctokit(token);\n\n\t\tcore.debug(`Tagging #${sha} with tag ${tag}`);\n\t\tawait client.git.createRef({\n\t\t\towner: github.context.repo.owner,\n\t\t\trepo: github.context.repo.repo,\n\t\t\tref: `refs/tags/${tag}`,\n\t\t\tsha: sha,\n\t\t});\n\t} catch (error) {\n\t\tcore.error(error);\n\t\tcore.setFailed(error.message);\n\t}\n}\n\nrun();\n"]}